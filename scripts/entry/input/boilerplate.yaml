---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ProjectName:
    Type: String
  QSS3BucketName:
    Type: String
    Default: aws_quickstart
  QSS3KeyPrefix:
    Type: String
    Default: quickstart-ammos-smallsat-toolkit/
  QSS3BucketRegion:
    Type: String
    Default: ''
  MainStackParams:
    Type: String
  RolePath:
    Type: String
    Default: ''
  PermissionsBoundaryArn:
    Type: String
    Default: ''
Conditions:
  RolePathProvided: !Not [!Equals ['', !Ref RolePath]]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  PermissionsBoundaryProvided: !Not [!Equals ['', !Ref PermissionsBoundaryArn]]
Resources:
  ConfigParserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-ConfigParser
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Path: !If [RolePathProvided, !Ref RolePath, !Ref AWS::NoValue]
      PermissionsBoundary:
        !If [PermissionsBoundaryProvided, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Policies:
        - PolicyDocument:
            Statement:
              - Action: iam:GetRole
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role
                      - !If [RolePathProvided, !Ref RolePath, /]
                      - !Sub ${ProjectName}
                      - "-*"
            Version: "2012-10-17"
          PolicyName: ConfigParser-Policy

  ConfigParser:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ProjectName}-ConfigParser
      Handler: config_parser.handler
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt ConfigParserRole.Arn
      Runtime: python3.9
      Code:
        S3Bucket: !If
          - UsingDefaultBucket
          - !Sub '${QSS3BucketName}-${AWS::Region}'
          - !Ref QSS3BucketName
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/ConfigParser/lambda.zip'

  Config:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt ConfigParser.Arn
      MainStackParams: !Ref MainStackParams

  MainStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        Place: Holder
