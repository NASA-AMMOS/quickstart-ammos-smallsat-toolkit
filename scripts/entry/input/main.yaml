AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  ProjectName:
    Type: String
    Default: 'jjen-test'
  QSS3KeyPrefix:
    Type: String
    Default: 'ast-jjen-test/'
  QSS3BucketName:
    Type: String
    Default: 'a2c-qs-assets'
  One:
    Type: String
    Default: '1'
  Two:
    Type: String
    Default: '2'
  Three:
    Type: String
    Default: '3'
  Four:
    Type: String
    Default: '4'
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
Resources:
  HelloWorldFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ProjectName}-dummy
      Handler: app.lambda_handler
      Runtime: python3.9
      Role: !GetAtt HelloWorldRole.Arn
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: !Sub "${QSS3KeyPrefix}functions/packages/HelloWorld/lambda.zip"
      Environment:
        Variables:
          One:   !Ref One
          Two:   !Ref Two
          Three: !Ref Three
          Four:  !Ref Four
  HelloWorldRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-HelloWorld-iam
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Path: /am-jjen/
      PermissionsBoundary: arn:aws-us-gov:iam::016915823617:policy/Security_Boundary_NoIAM
      Policies:
        - PolicyDocument:
            Statement:
              - Action: iam:GetRole
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role
                      - /am-jjen/
                      - !Sub ${ProjectName}
                      - "-*"
            Version: "2012-10-17"
          PolicyName: HelloWorld-Policy
