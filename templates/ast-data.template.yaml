AWSTemplateFormatVersion: "2010-09-09"

Description: EFS Configuration for AST Deployment

Parameters:
  ProjectName:
    Description: Name of stack
    Type: String
  ConfigBucketName:
    Description: Name of the S3 bucket used to store project-specific configuration
      files.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-ammos-smallsat-toolkit/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1AID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1BID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1CID:
    Type: AWS::EC2::Subnet::Id
  BootstrapRoleArn:
    Description: ARN of the IAM Role created for bootstrapping the EFS FileSystem
    Type: String
    Default: ""
  EnableBackups:
    Description: Will enable AWS Backups for EFS if "true" (default), or skip if "false"
    Type: String
    Default: "true"
    AllowedValues: ["false", "true"]
  BackupRoleArn:
    Description: ARN of the IAM Role created for enabling EFS Backups
    Type: String
    Default: ""
  ScheduleExpression:
    Type: String
    Default: "cron(0 12 * * ? *)"
  StartWindowMinutes:
    Type: Number
    Default: 60
  CompletionWindowMinutes:
    Type: Number
    Default: 120
  MoveToColdStorageAfterDays:
    Type: Number
    Default: 30
  DeleteAfterDays:
    Type: Number
    Default: 120

Conditions:
  EnableBackup: !Equals [!Ref EnableBackups, "true"]

Resources:
  EfsBackupVault:
    Condition: EnableBackup
    Type: "AWS::Backup::BackupVault"
    Properties:
      BackupVaultName: !Sub "${ProjectName}-EfsBackupVault"

  EfsBackupPlan:
    Condition: EnableBackup
    Type: "AWS::Backup::BackupPlan"
    Properties:
      BackupPlan:
        BackupPlanName: !Sub "${ProjectName}-EfsBackupPlan"
        BackupPlanRule:
          - RuleName: EfsBackupRule
            TargetBackupVault: !Ref EfsBackupVault
            ScheduleExpression: !Ref ScheduleExpression
            StartWindowMinutes: !Ref StartWindowMinutes
            CompletionWindowMinutes: !Ref CompletionWindowMinutes
            Lifecycle:
              MoveToColdStorageAfterDays: !Ref MoveToColdStorageAfterDays
              DeleteAfterDays: !Ref DeleteAfterDays

  EfsBackupSelection:
    Condition: EnableBackup
    Type: "AWS::Backup::BackupSelection"
    Properties:
      BackupPlanId: !Ref EfsBackupPlan
      BackupSelection:
        SelectionName: "EfsBackupSelection"
        IamRoleArn: !Ref BackupRoleArn
        ListOfTags:
          - ConditionType: STRINGEQUALS
            ConditionKey: backupplan
            ConditionValue: efs-backup-plan

  BootstrapLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VpcId
      GroupDescription: "Bootstrap Lambda Security Group"

  BootstrapEfsFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - 'MountTargetPrivateA'
      - 'MountTargetPrivateB'
    Properties:
      Handler: bootstrap_efs.handler
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/BootstrapEfs/lambda.zip'
      Description: Bootstrap an EFS Filesystem with the files needed for the Aerie Deployment
      MemorySize: 512
      Timeout: 600
      # Need to change this to updated IAM
      Role: !Ref BootstrapRoleArn
      Runtime: python3.9
      VpcConfig:
        SecurityGroupIds:
          - !Ref BootstrapLambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1AID
      FileSystemConfigs:
        - Arn: !GetAtt 'RootAccessPoint.Arn'
          LocalMountPath: '/mnt/efs'
  EfsBootstrap:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt BootstrapEfsFunction.Arn
      BucketName: !Ref ConfigBucketName

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      PerformanceMode: generalPurpose
      BackupPolicy:
        Status: DISABLED
      FileSystemTags:
        - Key: Name
          Value: !Sub '${ProjectName}-ait-efs'
        - Key: backupplan
          Value: efs-backup-plan

  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VpcId
      GroupDescription: "EFS Security Group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref BootstrapLambdaSecurityGroup

  MountTargetPrivateA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PrivateSubnet1AID
      SecurityGroups: [!Ref EfsSecurityGroup]
  MountTargetPrivateB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PrivateSubnet1BID
      SecurityGroups: [!Ref EfsSecurityGroup]
  MountTargetPrivateC:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PrivateSubnet1CID
      SecurityGroups: [!Ref EfsSecurityGroup]

  RootAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId:
        Ref: FileSystem
      PosixUser:
        Uid: "1001"
        Gid: "1001"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1001"
          OwnerUid: "1001"
          Permissions: "777"
        Path: "/efs"

  AitAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref FileSystem
      PosixUser:
        Uid: '1001'
        Gid: '1001'
      RootDirectory:
        CreationInfo:
          OwnerGid: '1001'
          OwnerUid: '1001'
          Permissions: '755'
        Path: '/efs/ait'

  AerieFilestoreAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      RootDirectory:
        CreationInfo:
          OwnerUid: "1001"
          OwnerGid: "1001"
          Permissions: "777"
        Path: /efs/aerie
      FileSystemId: !Ref FileSystem

  PostgresInitAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      RootDirectory:
        CreationInfo:
          OwnerUid: "1001"
          OwnerGid: "1001"
          Permissions: "777"
        Path: /efs/init_postgres
      FileSystemId: !Ref FileSystem

  HasuraInitAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      RootDirectory:
        CreationInfo:
          OwnerUid: "1001"
          OwnerGid: "1001"
          Permissions: "777"
        Path: /efs/init_hasura
      FileSystemId: !Ref FileSystem

  PostgresDataAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      RootDirectory:
        CreationInfo:
          OwnerUid: "1001"
          OwnerGid: "1001"
          Permissions: "777"
        Path: /efs/postgres
      FileSystemId: !Ref FileSystem

  CommandingInitAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      RootDirectory:
        CreationInfo:
          OwnerUid: "1001"
          OwnerGid: "1001"
          Permissions: "777"
        Path: /efs/init_commanding
      FileSystemId: !Ref FileSystem

Outputs:
  EfsLambdaMountTarget:
    Description: "Mount target for lambda function"
    Value: !Ref MountTargetPrivateA
  EfsFileSystemId:
    Description: "Filesystem-ID for EFS"
    Value: !GetAtt FileSystem.FileSystemId
  EfsFileSystemArn:
    Description: "ARN for EFS Filesystem"
    Value: !GetAtt FileSystem.Arn

  # ==================== EFS Acess Points ==================== #
  # Root
  EfsRootAccessPointArn:
    Description: "Access Point for EFS Root Path (ARN)"
    Value: !GetAtt RootAccessPoint.Arn
    Export:
      Name: !Sub "${ProjectName}-EfsRootAccessPointArn"
  EfsRootAccessPointId:
    Description: "Access Point for EFS Root Path (FS ID)"
    Value: !Ref RootAccessPoint
  # AIT Filestore
  AitAccessPointId:
    Description: Access Point for AIT AccessPoint
    Value: !Ref AitAccessPoint
  AitAccessPointArn:
    Description: Access Point for AIT AccessPoint
    Value: !GetAtt AitAccessPoint.Arn
  # Aerie Filestore
  AerieFilestoreAccessPointId:
    Description: Access Point for AerieFilestore AccessPoint
    Value: !Ref AerieFilestoreAccessPoint
  AerieFilestoreAccessPointArn:
    Description: Access Point for AerieFilestore AccessPoint
    Value: !GetAtt AerieFilestoreAccessPoint.Arn
  # Postgres Data
  PostgresDataAccessPointId:
    Description: Access Point for PostgresData AccessPoint
    Value: !Ref PostgresDataAccessPoint
  PostgresDataAccessPointArn:
    Description: Access Point for PostgresData AccessPoint
    Value: !GetAtt PostgresDataAccessPoint.Arn
  # Postgres Init
  PostgresInitAccessPointId:
    Description: Access Point for PostgresInit AccessPoint
    Value: !Ref PostgresInitAccessPoint
  PostgresInitAccessPointArn:
    Description: Access Point for PostgresInitAccessPoint
    Value: !GetAtt PostgresInitAccessPoint.Arn
  # Hasura Init
  HasuraInitAccessPointId:
    Description: Access Point for HasuraInit AccessPoint
    Value: !Ref HasuraInitAccessPoint
  HasuraInitAccessPointArn:
    Description: Access Point for HasuraInit AccessPoint
    Value: !GetAtt HasuraInitAccessPoint.Arn
  # Commanding Init
  CommandingInitAccessPointId:
    Description: Access Point for CommandingInit AccessPoint
    Value: !Ref CommandingInitAccessPoint
  CommandingInitAccessPointArn:
    Description: Access Point for CommandingInit AccessPoint
    Value: !GetAtt CommandingInitAccessPoint.Arn

  EfsSecurityGroupId:
    Description: "Security group ID for lambda function"
    Value: !Ref EfsSecurityGroup
